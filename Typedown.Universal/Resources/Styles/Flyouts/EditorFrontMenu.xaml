<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <MenuFlyout x:Key="EditorFrontMenu" Placement="Bottom">
        <MenuFlyoutItem x:Uid="Duplicate" Command="{Binding ParagraphViewModel.DuplicateCommand}"/>
        <MenuFlyoutSubItem x:Uid="TurnInto">
            
            <ToggleMenuFlyoutItem 
                x:Uid="ItemParagraph" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutParagraph, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Paragraph.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Paragraph.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="paragraph"/>
            <MenuFlyoutSeparator/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading1" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading1, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading1.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading1.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="heading 1"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading2" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading2, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading2.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading2.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
                CommandParameter="heading 2"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading3" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading3, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading3.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading3.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
                CommandParameter="heading 3"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading4" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading4, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading4.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading4.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
                CommandParameter="heading 4"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading5" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading5, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading5.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading5.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
                CommandParameter="heading 5"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Heading6" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading6, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.Heading6.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.Heading6.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="heading 6" />
            
            <MenuFlyoutSeparator />
            
            <ToggleMenuFlyoutItem 
                x:Uid="OrderedList" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutOrderedList, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.OrderList.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.OrderList.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="ol-order"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="Unordered" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutUnordered, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.BulletList.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.BulletList.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="ul-bullet"/>
            
            <ToggleMenuFlyoutItem 
                x:Uid="TaskList" 
                KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutTaskList, Converter={StaticResource ShortcutKeyToStringConverter}}" 
                IsEnabled="{Binding EditorViewModel.ParagraphState.TaskList.IsEnable, Mode=OneWay}" 
                IsChecked="{Binding EditorViewModel.ParagraphState.TaskList.IsChecked, Mode=TwoWay}" 
                Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
                CommandParameter="ul-task"/>
        
        </MenuFlyoutSubItem>
        
        <MenuFlyoutItem 
            x:Uid="InsertParagraphBefore" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutInsertParagraphBefore, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.InsertParagraphCommand}" 
            CommandParameter="before"/>
        
        <MenuFlyoutItem 
            x:Uid="InsertParagraphAfter" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutInsertParagraphAfter, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.InsertParagraphCommand}" 
            CommandParameter="after"/>
        
        <MenuFlyoutItem 
            x:Uid="Delete" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutDelete, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.DeleteParagraphCommand}"/>
        
    </MenuFlyout>
</ResourceDictionary>
