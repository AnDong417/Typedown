<UserControl
    x:Class="Typedown.Universal.Controls.MainContent"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Typedown.Universal.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:viewmodels="using:Typedown.Universal.ViewModels" 
    d:DataContext="{d:DesignInstance Type=viewmodels:AppViewModel}"
    mc:Ignorable="d"
    Loaded="OnLoaded"
    Unloaded="OnUnloaded"
    SizeChanged="OnSizeChanged"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <Grid Background="{ThemeResource SolidBackgroundFillColorTertiary}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SidePaneStates">
                <VisualState x:Name="SidePaneOpen">
                    <VisualState.Setters>
                        <Setter Target="Splitter.Visibility" Value="Visible"/>
                        <Setter Target="SplitterLine.Visibility" Value="Visible"/>
                        <Setter Target="LeftPaneColumn.MaxWidth" Value="65535"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SidePaneHide">
                    <VisualState.Setters>
                        <Setter Target="Splitter.Visibility" Value="Collapsed"/>
                        <Setter Target="SplitterLine.Visibility" Value="Collapsed"/>
                        <Setter Target="LeftPaneColumn.MaxWidth" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftPaneColumn" Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <local:LeftPane x:Name="LeftPane" x:Load="{x:Bind Settings.SidePaneOpen, Mode=OneWay}"/>
        <ContentPresenter Grid.Column="2" x:Name="MarkdownEditorPresenter">
            <ContentPresenter.ContextFlyout>
                <MenuFlyout OverlayInputPassThroughElement="{Binding XamlRoot.Content}" AreOpenCloseAnimationsEnabled="{Binding SettingsViewModel.AnimationEnable}">
                    <MenuFlyoutItem x:Name="HeaderButtons">
                        <MenuFlyoutItem.Template>
                            <ControlTemplate TargetType="MenuFlyoutItem">
                                <StackPanel Orientation="Horizontal" Spacing="4" Padding="4">
                                    <Button Style="{StaticResource EllipsisIconButtonStyle}" Command="{Binding FormatViewModel.SetFormatCommand}" CommandParameter="strong">
                                        <FontIcon FontSize="16" Glyph="&#xE8DD;"/>
                                    </Button>
                                    <Button Style="{StaticResource EllipsisIconButtonStyle}" Command="{Binding FormatViewModel.SetFormatCommand}" CommandParameter="em">
                                        <FontIcon FontSize="16" Glyph="&#xE8DB;"/>
                                    </Button>
                                    <Button Style="{StaticResource EllipsisIconButtonStyle}" Command="{Binding FormatViewModel.SetFormatCommand}" CommandParameter="u">
                                        <FontIcon FontSize="16" Glyph="&#xE8DC;"/>
                                    </Button>
                                    <Button Style="{StaticResource EllipsisIconButtonStyle}" Command="{Binding FormatViewModel.SetFormatCommand}" CommandParameter="del">
                                        <FontIcon FontSize="16" Glyph="&#xEDE0;"/>
                                    </Button>
                                    <Button Style="{StaticResource EllipsisIconButtonStyle}" Command="{Binding FormatViewModel.SetFormatCommand}" CommandParameter="clear">
                                        <FontIcon FontSize="16" Glyph="&#xe75c;"/>
                                    </Button>
                                </StackPanel>
                            </ControlTemplate>
                        </MenuFlyoutItem.Template>
                    </MenuFlyoutItem>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="Undo" KeyboardAcceleratorTextOverride="Ctrl+Z" Icon="Undo" Command="{Binding EditorViewModel.UndoCommand}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="Cut" KeyboardAcceleratorTextOverride="Ctrl+X" Icon="Cut" Command="{Binding EditorViewModel.CutCommand}" CommandParameter="normal"/>
                    <MenuFlyoutItem x:Uid="Copy" KeyboardAcceleratorTextOverride="Ctrl+C" Icon="Copy" Command="{Binding EditorViewModel.CopyCommand}" CommandParameter="normal"/>
                    <MenuFlyoutItem x:Uid="Paste" KeyboardAcceleratorTextOverride="Ctrl+V" Icon="Paste" Command="{Binding EditorViewModel.PasteCommand}" CommandParameter="normal"/>
                    <MenuFlyoutSubItem x:Uid="CopyPasteAs">
                        <MenuFlyoutItem x:Uid="CopyAsPlainText" Command="{Binding EditorViewModel.CopyCommand}" CommandParameter="copyAsPlainText"/>
                        <MenuFlyoutItem x:Uid="CopyAsMarkdown" KeyboardAcceleratorTextOverride="Ctrl+Shift+C" Command="{Binding EditorViewModel.CopyCommand}" CommandParameter="copyAsMarkdown"/>
                        <MenuFlyoutItem x:Uid="CopyAsHTMLCode" Command="{Binding EditorViewModel.CopyCommand}" CommandParameter="copyAsHtml"/>
                        <MenuFlyoutItem x:Uid="PasteAsPlainText" Command="{Binding EditorViewModel.PasteCommand}" CommandParameter="pasteAsPlainText"/>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="Delete" Icon="Delete" KeyboardAcceleratorTextOverride="Delete" Command="{Binding EditorViewModel.DeleteSelectionCommand}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="SelectAll" Icon="SelectAll" KeyboardAcceleratorTextOverride="Ctrl+A" Command="{Binding EditorViewModel.SelectAllCommand}"/>
                </MenuFlyout>
            </ContentPresenter.ContextFlyout>
        </ContentPresenter>
        <Border x:Name="SplitterLine" Grid.Column="1" Width="1" Background="{ThemeResource CardStrokeColorDefault}"/>
        <local:GridSplitter x:Name="Splitter" Grid.Column="1" ColumnMinWidth="40" ColumnExpectWidth="{Binding SettingsViewModel.SidePaneWidth, Mode=TwoWay}" ColumnWidth="{x:Bind LeftPaneColumn.Width, Mode=TwoWay}"/>
    </Grid>
</UserControl>
