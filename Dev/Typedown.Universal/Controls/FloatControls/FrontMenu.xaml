<MenuFlyout
    x:Class="Typedown.Universal.Controls.FloatControls.FrontMenu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Typedown.Universal.Controls.FloatControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:u="using:Typedown.Universal.Utilities"
    Placement="Bottom"
    Closed="OnClosed"
    mc:Ignorable="d">
    <MenuFlyoutItem Text="{u:LocaleString Key=Duplicate}" Command="{Binding ParagraphViewModel.DuplicateCommand}"/>
    <MenuFlyoutSubItem Text="{u:LocaleString Key=TurnInto}">
        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Paragraph}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutParagraph, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Paragraph.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Paragraph.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="paragraph"/>
        <MenuFlyoutSeparator/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading1}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading1, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading1.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading1.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="heading 1"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading2}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading2, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading2.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading2.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
            CommandParameter="heading 2"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading3}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading3, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading3.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading3.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
            CommandParameter="heading 3"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading4}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading4, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading4.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading4.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
            CommandParameter="heading 4"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading5}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading5, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading5.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading5.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}"  
            CommandParameter="heading 5"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=Heading6}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutHeading6, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.Heading6.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.Heading6.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="heading 6" />

        <MenuFlyoutSeparator />

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=OrderedList}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutOrderedList, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.OrderList.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.OrderList.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="ol-order"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=UnorderedList}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutUnordered, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.BulletList.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.BulletList.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="ul-bullet"/>

        <ToggleMenuFlyoutItem 
            Text="{u:LocaleString Key=TaskList}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutTaskList, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            IsEnabled="{Binding EditorViewModel.ParagraphState.TaskList.IsEnable, Mode=OneWay}" 
            IsChecked="{Binding EditorViewModel.ParagraphState.TaskList.IsChecked, Mode=TwoWay}" 
            Command="{Binding ParagraphViewModel.UpdateParagraphCommand}" 
            CommandParameter="ul-task"/>

    </MenuFlyoutSubItem>

    <MenuFlyoutItem 
            Text="{u:LocaleString Key=InsertParagraphBefore}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutInsertParagraphBefore, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.InsertParagraphCommand}" 
            CommandParameter="before"/>

    <MenuFlyoutItem 
            Text="{u:LocaleString Key=InsertParagraphAfter}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutInsertParagraphAfter, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.InsertParagraphCommand}" 
            CommandParameter="after"/>

    <MenuFlyoutItem 
            Text="{u:LocaleString Key=Delete}" 
            KeyboardAcceleratorTextOverride="{Binding SettingsViewModel.ShortcutDelete, Converter={StaticResource ShortcutKeyToStringConverter}}" 
            Command="{Binding ParagraphViewModel.DeleteParagraphCommand}"/>
</MenuFlyout>
