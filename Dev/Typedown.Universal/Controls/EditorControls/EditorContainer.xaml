<UserControl
    x:Class="Typedown.Universal.Controls.EditorContainer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Typedown.Universal.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:float="using:Typedown.Universal.Controls.FloatControls" 
    xmlns:viewmodels="using:Typedown.Universal.ViewModels" 
    xmlns:items="using:Typedown.Universal.Controls.EditorControls.ContextMenuItems"
    xmlns:u="using:Typedown.Universal.Utilities"
    d:DataContext="{d:DesignInstance Type=viewmodels:AppViewModel}"
    mc:Ignorable="d"
    x:Name="ThisControl"
    Loaded="OnLoaded"
    Unloaded="OnUnloaded"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <ScaleTransform 
            x:Key="FindReplaceTransform" 
            x:Name="FindReplaceTransform" 
            CenterX="{x:Bind FindReplaceCenterPoint.X, Mode=OneWay}" 
            CenterY="{x:Bind FindReplaceCenterPoint.Y, Mode=OneWay}"/>
        <CircleEase x:Key="CircleEaseOut" EasingMode="EaseOut"/>
        <CircleEase x:Key="CircleEaseIn" EasingMode="EaseIn"/>
    </UserControl.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FindReplaceStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition To="FindReplaceVisible" GeneratedDuration="0:0:0.2">
                        <VisualTransition.Storyboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThisControl" Storyboard.TargetProperty="IsFindReplaceLoad">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FindReplaceTransform" Storyboard.TargetProperty="ScaleX">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" EasingFunction="{StaticResource CircleEaseOut}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FindReplaceTransform" Storyboard.TargetProperty="ScaleY">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" EasingFunction="{StaticResource CircleEaseOut}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition.Storyboard>
                    </VisualTransition>
                    <VisualTransition To="FindReplaceCollapsed" GeneratedDuration="0:0:0.2">
                        <VisualTransition.Storyboard>
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThisControl" Storyboard.TargetProperty="IsFindReplaceLoad">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FindReplaceTransform" Storyboard.TargetProperty="ScaleX">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" EasingFunction="{StaticResource CircleEaseIn}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FindReplaceTransform" Storyboard.TargetProperty="ScaleY">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" EasingFunction="{StaticResource CircleEaseIn}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition.Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="FindReplaceVisible">
                    <VisualState.Setters>
                        <Setter Target="ThisControl.IsFindReplaceLoad" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FindReplaceCollapsed">
                    <VisualState.Setters>
                        <Setter Target="ThisControl.IsFindReplaceLoad" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ContentPresenter x:Name="MarkdownEditorPresenter" AllowDrop="True" DragEnter="OnDragEnter" Drop="OnDrop">
            <ContentPresenter.ContextFlyout>
                <MenuFlyout x:Name="Flyout" OverlayInputPassThroughElement="{Binding XamlRoot.Content}" AreOpenCloseAnimationsEnabled="{Binding SettingsViewModel.AnimationEnable}">
                    <items:FormatItem x:Name="MenuFormatItem" x:Load="{x:Bind Editor.ParagraphState.FormatIsEnable, Mode=OneWay}" ItemClick="OnFormatItemClick"/>
                    <MenuFlyoutSeparator x:Name="MenuFormatItemSeparator" x:Load="{x:Bind Editor.ParagraphState.FormatIsEnable, Mode=OneWay}"/>
                    <MenuFlyoutSubItem x:Name="MenuImageItem" Text="{u:LocaleString Key=Image}" x:Load="{x:Bind Format.FormatState.Image, Mode=OneWay}">
                        <MenuFlyoutSubItem.Icon>
                            <FontIcon Glyph="&#xe91b;"/>
                        </MenuFlyoutSubItem.Icon>
                        <local:MenuItemCollection.Value>
                            <items:ImageItem/>
                        </local:MenuItemCollection.Value>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSeparator x:Name="MenuImageItemSeparator" x:Load="{x:Bind Format.FormatState.Image, Mode=OneWay}"/>
                    <!--<MenuFlyoutSubItem x:Name="MenuCodeFencesItem" Text="{u:LocaleString Key=CodeFences}" x:Load="{x:Bind Editor.ParagraphState.CodeFences.IsChecked, Mode=OneWay}">
                        <local:MenuItemCollection.Value>
                            <items:CodeFencesItem/>
                        </local:MenuItemCollection.Value>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSeparator x:Name="MenuCodeFencesItemSeparator" x:Load="{x:Bind Editor.ParagraphState.CodeFences.IsChecked, Mode=OneWay}"/>-->
                    <MenuFlyoutItem Text="{u:LocaleString Key=Undo}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutUndo, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}" Icon="Undo" Command="{x:Bind Editor.UndoCommand}" IsEnabled="{x:Bind Editor.History.Undoable, Mode=OneWay}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Name="CutItem" Text="{u:LocaleString Key=Cut}" Icon="Cut" Command="{x:Bind Editor.CutCommand}" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" CommandParameter="normal" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutCut, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                    <MenuFlyoutItem x:Name="CopyItem" Text="{u:LocaleString Key=Copy}" Icon="Copy" Command="{x:Bind Editor.CopyCommand}" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" CommandParameter="normal" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutCopy, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                    <MenuFlyoutItem x:Name="PasteItem" Text="{u:LocaleString Key=Paste}" Icon="Paste" Command="{x:Bind Editor.PasteCommand}" CommandParameter="normal" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutPaste, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                    <MenuFlyoutSubItem Text="{u:LocaleString Key=CopyPasteAs}">
                        <MenuFlyoutItem x:Name="CopyAsPlainTextItem" Text="{u:LocaleString Key=CopyAsPlainText}" Visibility="{x:Bind Settings.SourceCode, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}" Command="{x:Bind Editor.CopyCommand}" CommandParameter="copyAsPlainText" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutCopyAsPlainText, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                        <MenuFlyoutItem x:Name="CopyAsMarkdownItem" Text="{u:LocaleString Key=CopyAsMarkdown}" Visibility="{x:Bind Settings.SourceCode, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}" Command="{x:Bind Editor.CopyCommand}" CommandParameter="copyAsMarkdown" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutCopyAsMarkdown, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                        <MenuFlyoutItem x:Name="CopyAsHTMLCodeItem" Text="{u:LocaleString Key=CopyAsHTMLCode}" Visibility="{x:Bind Settings.SourceCode, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}" Command="{x:Bind Editor.CopyCommand}" CommandParameter="copyAsHtml" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutCopyAsHTMLCode, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                        <MenuFlyoutItem x:Name="PasteAsPlainTextItem" Text="{u:LocaleString Key=PasteAsPlainText}" Visibility="{x:Bind Settings.SourceCode, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}" Command="{x:Bind Editor.PasteCommand}" CommandParameter="pasteAsPlainText" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutPasteAsPlainText, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                    </MenuFlyoutSubItem>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Name="DeleteItem" Icon="Delete" Text="{u:LocaleString Key=Delete}" Command="{x:Bind Editor.DeleteSelectionCommand}" IsEnabled="{x:Bind Editor.Selected, Mode=OneWay}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutDelete, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Name="SelectAllItem" Icon="SelectAll" Text="{u:LocaleString Key=SelectAll}" Command="{x:Bind Editor.SelectAllCommand}" KeyboardAcceleratorTextOverride="{x:Bind Settings.ShortcutSelectAll, Mode=OneWay, Converter={StaticResource ShortcutKeyToStringConverter}}"/>
                </MenuFlyout>
            </ContentPresenter.ContextFlyout>
        </ContentPresenter>
        <ScrollBar 
            x:Name="HorizontalScrollBar" 
            Orientation="Horizontal" 
            VerticalAlignment="Bottom" 
            IndicatorMode="MouseIndicator" 
            Scroll="OnScroll" 
            Visibility="{x:Bind IsScrollBarVisibility(ScrollState.MaximumX), Mode=OneWay}"
            SmallChange="{x:Bind GetSmallChange(Settings.FontSize, Settings.LineHeight), Mode=OneWay}"
            LargeChange="{x:Bind ScrollState.ViewportWidth, Mode=OneWay}"
            Value="{x:Bind ScrollState.ScrollX, Mode=OneWay}"
            ViewportSize="{x:Bind ScrollState.ViewportWidth, Mode=OneWay}"
            Maximum="{x:Bind ScrollState.MaximumX, Mode=OneWay}"/>
        <ScrollBar 
            x:Name="VerticalScrollBar" 
            Orientation="Vertical" 
            HorizontalAlignment="Right" 
            IndicatorMode="MouseIndicator" 
            Scroll="OnScroll" 
            Visibility="{x:Bind IsScrollBarVisibility(ScrollState.MaximumY), Mode=OneWay}"
            SmallChange="{x:Bind GetSmallChange(Settings.FontSize, Settings.LineHeight), Mode=OneWay}"
            LargeChange="{x:Bind ScrollState.ViewportHeight, Mode=OneWay}"
            Value="{x:Bind ScrollState.ScrollY, Mode=OneWay}"
            ViewportSize="{x:Bind ScrollState.ViewportHeight, Mode=OneWay}"
            Maximum="{x:Bind ScrollState.MaximumY, Mode=OneWay}"/>
        <float:FindReplace 
            x:Name="FindReplaceDialog" 
            x:Load="{x:Bind IsFindReplaceLoad, Mode=OneWay}"
            RenderTransform="{StaticResource FindReplaceTransform}"/>
    </Grid>
</UserControl>
